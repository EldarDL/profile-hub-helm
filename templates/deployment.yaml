apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "profile-hub.fullname" . }}
  labels:
    {{- include "profile-hub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "profile-hub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "profile-hub.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-mongodb-auth
          image: mongo:6.0
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for MongoDB to be ready..."
              until mongosh --host {{ include "profile-hub.fullname" . }}-mongodb-headless:27017 --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
                echo "MongoDB not ready yet..."
                sleep 5
              done
              
              echo "Testing MongoDB authentication..."
              until mongosh "mongodb://{{ .Values.mongodb.auth.rootUser }}:{{ .Values.mongodb.auth.rootPassword }}@{{ include "profile-hub.fullname" . }}-mongodb-headless:27017/admin?authSource=admin" --eval "db.adminCommand('ping')" > /dev/null 2>&1; do
                echo "MongoDB authentication failed, retrying..."
                sleep 5
              done
              
              echo "MongoDB authentication successful!"

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "profile-hub.fullname" . }}-secret
                  key: MONGO_URI
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 